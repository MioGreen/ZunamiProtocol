{
  "contractName": "Main",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "stableCoins",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "traderBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"stableCoins\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"traderBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/alexey/src/ZunamiProtocol/contracts/Main.sol\":\"Main\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alexey/src/ZunamiProtocol/contracts/Main.sol\":{\"keccak256\":\"0x1b5be6f17246b66ecd41f0581fe816ff0bfb47eba3a093abc4379b0f56d3509c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d3ccde3322d346e04c125cfec882ea5c2365d4fb28ef52a0883fc8fa3910d2c\",\"dweb:/ipfs/QmWuJpig5weDKV4KxH6H33mmhBd2E1HjkgpPBApxmrCzsD\"]},\"/home/alexey/src/ZunamiProtocol/contracts/ZunamiStablecoin.sol\":{\"keccak256\":\"0x4989f06f96ba815d65a70ccdbd10514da228f5103ec7b1ccbd8146338202c0e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d2e1a0cb425ba89c4787e39384161883f61fe64e599d6031718e7b5d34b363e\",\"dweb:/ipfs/QmYVVe6FrqBSTwCCr5GWV9RNttG7omJV3xSQgGF9PZcemd\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180604001604052807f7573646300000000000000000000000000000000000000000000000000000000815260200173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff168152506000807f757364630000000000000000000000000000000000000000000000000000000081526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060405180604001604052807f7573647400000000000000000000000000000000000000000000000000000000815260200173dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff168152506000807f757364740000000000000000000000000000000000000000000000000000000081526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060405180604001604052807f7a7573640000000000000000000000000000000000000000000000000000000081526020013060405161025a90610325565b6102649190610341565b604051809103906000f080158015610280573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff168152506000807f7a7573640000000000000000000000000000000000000000000000000000000081526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505061038e565b611df0806107a783390190565b61033b8161035c565b82525050565b60006020820190506103566000830184610332565b92915050565b60006103678261036e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61040a8061039d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063040cf0201461005c5780631de26e161461007857806372ce957e14610094578063d56f5a5c146100c4578063f851a440146100f5575b600080fd5b6100766004803603810190610071919061024e565b610113565b005b610092600480360381019061008d919061024e565b610117565b005b6100ae60048036038101906100a991906101e9565b61011b565b6040516100bb919061030a565b60405180910390f35b6100de60048036038101906100d99190610225565b610140565b6040516100ec9291906102e1565b60405180910390f35b6100fd610184565b60405161010a91906102c6565b60405180910390f35b5050565b5050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506101b98161038f565b92915050565b6000813590506101ce816103a6565b92915050565b6000813590506101e3816103bd565b92915050565b600080604083850312156101fc57600080fd5b600061020a858286016101aa565b925050602061021b858286016101bf565b9150509250929050565b60006020828403121561023757600080fd5b6000610245848285016101bf565b91505092915050565b6000806040838503121561026157600080fd5b600061026f858286016101bf565b9250506020610280858286016101d4565b9150509250929050565b61029381610325565b82525050565b6102a281610337565b82525050565b6102b18161036b565b82525050565b6102c081610361565b82525050565b60006020820190506102db600083018461028a565b92915050565b60006040820190506102f66000830185610299565b61030360208301846102a8565b9392505050565b600060208201905061031f60008301846102b7565b92915050565b600061033082610341565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103768261037d565b9050919050565b600061038882610341565b9050919050565b61039881610325565b81146103a357600080fd5b50565b6103af81610337565b81146103ba57600080fd5b50565b6103c681610361565b81146103d157600080fd5b5056fea264697066735822122026caf95e5d17ebc98c2737c3bf0ee66e75fca67ef11a6aea39fcb2116963b27f64736f6c6343000803003360806040523480156200001157600080fd5b5060405162001df038038062001df08339818101604052810190620000379190620001e6565b6040518060400160405280601181526020017f5a756e616d6920537461626c65636f696e0000000000000000000000000000008152506040518060400160405280600481526020017f5a555344000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb9291906200011f565b508060049080519060200190620000d49291906200011f565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002c5565b8280546200012d9062000246565b90600052602060002090601f0160209004810192826200015157600085556200019d565b82601f106200016c57805160ff19168380011785556200019d565b828001600101855582156200019d579182015b828111156200019c5782518255916020019190600101906200017f565b5b509050620001ac9190620001b0565b5090565b5b80821115620001cb576000816000905550600101620001b1565b5090565b600081519050620001e081620002ab565b92915050565b600060208284031215620001f957600080fd5b60006200020984828501620001cf565b91505092915050565b60006200021f8262000226565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200025f57607f821691505b602082108114156200027657620002756200027c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620002b68162000212565b8114620002c257600080fd5b50565b611b1b80620002d56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac14610261578063a457c2d71461027d578063a9059cbb146102ad578063dd62ed3e146102dd576100ea565b806370a08231146101f55780638da5cb5b1461022557806395d89b4114610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b6040516101049190611417565b60405180910390f35b610127600480360381019061012291906111af565b61039f565b60405161013491906113fc565b60405180910390f35b6101456103bd565b6040516101529190611599565b60405180910390f35b61017560048036038101906101709190611160565b6103c7565b60405161018291906113fc565b60405180910390f35b6101936104c8565b6040516101a091906115b4565b60405180910390f35b6101c360048036038101906101be91906111af565b6104d1565b6040516101d091906113fc565b60405180910390f35b6101f360048036038101906101ee91906111af565b61057d565b005b61020f600480360381019061020a91906110fb565b61061b565b60405161021c9190611599565b60405180910390f35b61022d610663565b60405161023a91906113e1565b60405180910390f35b61024b610689565b6040516102589190611417565b60405180910390f35b61027b600480360381019061027691906111af565b61071b565b005b610297600480360381019061029291906111af565b6107b9565b6040516102a491906113fc565b60405180910390f35b6102c760048036038101906102c291906111af565b6108ad565b6040516102d491906113fc565b60405180910390f35b6102f760048036038101906102f29190611124565b6108cb565b6040516103049190611599565b60405180910390f35b60606003805461031c906116fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610348906116fd565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b60006103b36103ac610952565b848461095a565b6001905092915050565b6000600254905090565b60006103d4848484610b25565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061041f610952565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561049f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610496906114b9565b60405180910390fd5b6104bc856104ab610952565b85846104b79190611641565b61095a565b60019150509392505050565b60006012905090565b60006105736104de610952565b8484600160006104ec610952565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461056e91906115eb565b61095a565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610604906114d9565b60405180910390fd5b6106178282610da4565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060048054610698906116fd565b80601f01602080910402602001604051908101604052809291908181526020018280546106c4906116fd565b80156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a2906114d9565b60405180910390fd5b6107b58282610ef8565b5050565b600080600160006107c8610952565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087c90611559565b60405180910390fd5b6108a2610890610952565b85858461089d9190611641565b61095a565b600191505092915050565b60006108c16108ba610952565b8484610b25565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190611539565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3190611479565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b189190611599565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c90611519565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfc90611439565b60405180910390fd5b610c108383836110cc565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d90611499565b60405180910390fd5b8181610ca29190611641565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d3291906115eb565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d969190611599565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b90611579565b60405180910390fd5b610e20600083836110cc565b8060026000828254610e3291906115eb565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e8791906115eb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eec9190611599565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5f906114f9565b60405180910390fd5b610f74826000836110cc565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff190611459565b60405180910390fd5b81816110069190611641565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461105a9190611641565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bf9190611599565b60405180910390a3505050565b505050565b6000813590506110e081611ab7565b92915050565b6000813590506110f581611ace565b92915050565b60006020828403121561110d57600080fd5b600061111b848285016110d1565b91505092915050565b6000806040838503121561113757600080fd5b6000611145858286016110d1565b9250506020611156858286016110d1565b9150509250929050565b60008060006060848603121561117557600080fd5b6000611183868287016110d1565b9350506020611194868287016110d1565b92505060406111a5868287016110e6565b9150509250925092565b600080604083850312156111c257600080fd5b60006111d0858286016110d1565b92505060206111e1858286016110e6565b9150509250929050565b6111f481611675565b82525050565b61120381611687565b82525050565b6000611214826115cf565b61121e81856115da565b935061122e8185602086016116ca565b6112378161178d565b840191505092915050565b600061124f6023836115da565b915061125a8261179e565b604082019050919050565b60006112726022836115da565b915061127d826117ed565b604082019050919050565b60006112956022836115da565b91506112a08261183c565b604082019050919050565b60006112b86026836115da565b91506112c38261188b565b604082019050919050565b60006112db6028836115da565b91506112e6826118da565b604082019050919050565b60006112fe600a836115da565b915061130982611929565b602082019050919050565b60006113216021836115da565b915061132c82611952565b604082019050919050565b60006113446025836115da565b915061134f826119a1565b604082019050919050565b60006113676024836115da565b9150611372826119f0565b604082019050919050565b600061138a6025836115da565b915061139582611a3f565b604082019050919050565b60006113ad601f836115da565b91506113b882611a8e565b602082019050919050565b6113cc816116b3565b82525050565b6113db816116bd565b82525050565b60006020820190506113f660008301846111eb565b92915050565b600060208201905061141160008301846111fa565b92915050565b600060208201905081810360008301526114318184611209565b905092915050565b6000602082019050818103600083015261145281611242565b9050919050565b6000602082019050818103600083015261147281611265565b9050919050565b6000602082019050818103600083015261149281611288565b9050919050565b600060208201905081810360008301526114b2816112ab565b9050919050565b600060208201905081810360008301526114d2816112ce565b9050919050565b600060208201905081810360008301526114f2816112f1565b9050919050565b6000602082019050818103600083015261151281611314565b9050919050565b6000602082019050818103600083015261153281611337565b9050919050565b600060208201905081810360008301526115528161135a565b9050919050565b600060208201905081810360008301526115728161137d565b9050919050565b60006020820190508181036000830152611592816113a0565b9050919050565b60006020820190506115ae60008301846113c3565b92915050565b60006020820190506115c960008301846113d2565b92915050565b600081519050919050565b600082825260208201905092915050565b60006115f6826116b3565b9150611601836116b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116365761163561172f565b5b828201905092915050565b600061164c826116b3565b9150611657836116b3565b92508282101561166a5761166961172f565b5b828203905092915050565b600061168082611693565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156116e85780820151818401526020810190506116cd565b838111156116f7576000848401525b50505050565b6000600282049050600182168061171557607f821691505b602082108114156117295761172861175e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611ac081611675565b8114611acb57600080fd5b50565b611ad7816116b3565b8114611ae257600080fd5b5056fea26469706673582212201a76a1f3be21f2977a8496d0be8b6bfc7896cf1931cbedbaaba87ccea06ea14e64736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063040cf0201461005c5780631de26e161461007857806372ce957e14610094578063d56f5a5c146100c4578063f851a440146100f5575b600080fd5b6100766004803603810190610071919061024e565b610113565b005b610092600480360381019061008d919061024e565b610117565b005b6100ae60048036038101906100a991906101e9565b61011b565b6040516100bb919061030a565b60405180910390f35b6100de60048036038101906100d99190610225565b610140565b6040516100ec9291906102e1565b60405180910390f35b6100fd610184565b60405161010a91906102c6565b60405180910390f35b5050565b5050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506101b98161038f565b92915050565b6000813590506101ce816103a6565b92915050565b6000813590506101e3816103bd565b92915050565b600080604083850312156101fc57600080fd5b600061020a858286016101aa565b925050602061021b858286016101bf565b9150509250929050565b60006020828403121561023757600080fd5b6000610245848285016101bf565b91505092915050565b6000806040838503121561026157600080fd5b600061026f858286016101bf565b9250506020610280858286016101d4565b9150509250929050565b61029381610325565b82525050565b6102a281610337565b82525050565b6102b18161036b565b82525050565b6102c081610361565b82525050565b60006020820190506102db600083018461028a565b92915050565b60006040820190506102f66000830185610299565b61030360208301846102a8565b9392505050565b600060208201905061031f60008301846102b7565b92915050565b600061033082610341565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103768261037d565b9050919050565b600061038882610341565b9050919050565b61039881610325565b81146103a357600080fd5b50565b6103af81610337565b81146103ba57600080fd5b50565b6103c681610361565b81146103d157600080fd5b5056fea264697066735822122026caf95e5d17ebc98c2737c3bf0ee66e75fca67ef11a6aea39fcb2116963b27f64736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:590:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:6",
                "type": ""
              }
            ],
            "src": "7:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "229:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "239:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "251:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "262:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "247:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "239:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "319:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "343:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "275:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "275:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "201:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "213:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "224:4:6",
                "type": ""
              }
            ],
            "src": "131:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "404:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "414:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "443:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "425:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "414:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "386:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "396:7:6",
                "type": ""
              }
            ],
            "src": "359:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "506:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "516:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "531:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "538:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "516:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "488:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "498:7:6",
                "type": ""
              }
            ],
            "src": "461:126:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3969:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:6"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:6",
                "type": ""
              }
            ],
            "src": "152:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "349:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "359:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "381:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "368:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "359:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "424:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "397:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "397:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "327:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "335:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "343:5:6",
                "type": ""
              }
            ],
            "src": "297:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "525:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "571:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "580:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "583:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "573:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "573:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "573:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "546:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "555:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "542:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "567:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "538:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "538:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "535:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "597:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "612:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "626:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "616:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "641:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "676:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "687:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "672:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "672:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "696:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "651:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "641:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "724:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "739:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "753:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "743:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "769:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "804:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "815:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "800:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "800:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "824:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "779:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "779:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "769:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "487:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "498:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "510:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "518:6:6",
                "type": ""
              }
            ],
            "src": "442:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "921:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "967:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "976:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "979:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "969:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "969:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "969:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "942:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "951:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "938:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "938:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "963:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "934:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "931:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "993:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1008:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1022:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1012:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1037:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1072:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1083:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1068:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1068:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1092:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1047:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1047:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1037:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "891:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "902:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "914:6:6",
                "type": ""
              }
            ],
            "src": "855:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1206:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1252:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1261:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1264:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1254:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1254:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1254:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1227:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1236:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1223:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1223:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1248:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1219:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1219:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1216:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1278:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1293:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1307:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1297:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1322:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1357:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1368:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1353:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1353:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1377:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1332:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1322:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1405:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1420:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1424:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1450:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1485:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1496:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1481:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1481:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1505:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1460:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1450:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1179:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1191:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1199:6:6",
                "type": ""
              }
            ],
            "src": "1123:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1601:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1618:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1641:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1623:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1623:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1611:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1611:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1589:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1596:3:6",
                "type": ""
              }
            ],
            "src": "1536:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1725:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1742:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1765:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1747:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1747:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1735:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1735:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1735:37:6"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1713:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1720:3:6",
                "type": ""
              }
            ],
            "src": "1660:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1863:80:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1880:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1930:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$777_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1885:44:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1885:51:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1873:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:64:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1873:64:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$777_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1851:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1858:3:6",
                "type": ""
              }
            ],
            "src": "1784:159:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2014:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2031:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2054:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2036:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2036:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2024:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2024:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2002:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2009:3:6",
                "type": ""
              }
            ],
            "src": "1949:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2171:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2181:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2193:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2204:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2189:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2189:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2181:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2261:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2274:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2285:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2270:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2270:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2217:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2217:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2143:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2155:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2166:4:6",
                "type": ""
              }
            ],
            "src": "2073:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2441:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2451:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2463:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2474:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2459:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2451:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2531:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2544:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2555:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2540:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2540:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2487:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2626:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2639:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2650:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2635:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2635:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$777_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2568:57:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2568:86:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2568:86:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_contract$_IERC20_$777__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2405:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2417:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2425:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2436:4:6",
                "type": ""
              }
            ],
            "src": "2301:360:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2765:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2775:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2787:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2798:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2783:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2783:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2775:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2855:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2868:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2879:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2864:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2864:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2811:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2811:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2811:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2737:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2749:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2760:4:6",
                "type": ""
              }
            ],
            "src": "2667:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2940:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2950:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2979:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2961:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2961:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2950:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2922:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2932:7:6",
                "type": ""
              }
            ],
            "src": "2895:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3042:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3052:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3063:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3052:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3024:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3034:7:6",
                "type": ""
              }
            ],
            "src": "2997:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3125:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3135:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3150:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3157:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3146:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3135:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3107:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3117:7:6",
                "type": ""
              }
            ],
            "src": "3080:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3257:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3267:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3278:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3267:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3239:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3249:7:6",
                "type": ""
              }
            ],
            "src": "3212:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3369:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3379:64:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3437:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$777_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3392:44:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:51:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3379:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$777_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3349:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3359:9:6",
                "type": ""
              }
            ],
            "src": "3295:154:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3529:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3539:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3570:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3552:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3552:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3539:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$777_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3509:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3519:9:6",
                "type": ""
              }
            ],
            "src": "3455:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3631:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3688:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3697:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3700:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3690:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3690:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3690:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3654:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3679:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3661:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3661:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3651:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3651:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3644:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3641:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3624:5:6",
                "type": ""
              }
            ],
            "src": "3588:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3759:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3816:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3825:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3828:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3818:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3818:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3818:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3782:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3807:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "3789:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3789:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3779:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3779:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3772:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3769:2:6"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3752:5:6",
                "type": ""
              }
            ],
            "src": "3716:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3887:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3944:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3953:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3956:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3946:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3946:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3946:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3910:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3935:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3917:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3917:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3907:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3907:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3900:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3897:2:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3880:5:6",
                "type": ""
              }
            ],
            "src": "3844:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$777_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$777_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_contract$_IERC20_$777__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$777_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$777_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$777_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$777_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "155:977:0:-:0;;;722:281;;;;;;;;;;754:10;746:5;;:18;;;;;;;;;;;;;;;;;;800:35;;;;;;;;806:10;800:35;;;;212:42;800:35;;;;;774:11;:23;786:10;774:23;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:35;;;;;;;;877:10;871:35;;;;297:42;871:35;;;;;845:11;:23;857:10;845:23;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:54;;;;;;;;948:10;942:54;;;;989:4;960:35;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;942:54;;;;;916:11;:23;928:10;916:23;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:977;;;;;;;;;;:::o;7:118:6:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:96::-;;425:24;443:5;425:24;:::i;:::-;414:35;;404:51;;;:::o;461:126::-;;538:42;531:5;527:54;516:65;;506:81;;;:::o;155:977:0:-;;;;;;;",
  "deployedSourceMap": "155:977:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1072:58;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1009:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;622:66;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;695:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1072:58;;;:::o;1009:57::-;;;:::o;622:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;572:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;695:20::-;;;;;;;;;;;;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:139::-;;381:6;368:20;359:29;;397:33;424:5;397:33;:::i;:::-;349:87;;;;:::o;442:407::-;;;567:2;555:9;546:7;542:23;538:32;535:2;;;583:1;580;573:12;535:2;626:1;651:53;696:7;687:6;676:9;672:22;651:53;:::i;:::-;641:63;;597:117;753:2;779:53;824:7;815:6;804:9;800:22;779:53;:::i;:::-;769:63;;724:118;525:324;;;;;:::o;855:262::-;;963:2;951:9;942:7;938:23;934:32;931:2;;;979:1;976;969:12;931:2;1022:1;1047:53;1092:7;1083:6;1072:9;1068:22;1047:53;:::i;:::-;1037:63;;993:117;921:196;;;;:::o;1123:407::-;;;1248:2;1236:9;1227:7;1223:23;1219:32;1216:2;;;1264:1;1261;1254:12;1216:2;1307:1;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1278:117;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1206:324;;;;;:::o;1536:118::-;1623:24;1641:5;1623:24;:::i;:::-;1618:3;1611:37;1601:53;;:::o;1660:118::-;1747:24;1765:5;1747:24;:::i;:::-;1742:3;1735:37;1725:53;;:::o;1784:159::-;1885:51;1930:5;1885:51;:::i;:::-;1880:3;1873:64;1863:80;;:::o;1949:118::-;2036:24;2054:5;2036:24;:::i;:::-;2031:3;2024:37;2014:53;;:::o;2073:222::-;;2204:2;2193:9;2189:18;2181:26;;2217:71;2285:1;2274:9;2270:17;2261:6;2217:71;:::i;:::-;2171:124;;;;:::o;2301:360::-;;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2568:86;2650:2;2639:9;2635:18;2626:6;2568:86;:::i;:::-;2441:220;;;;;:::o;2667:222::-;;2798:2;2787:9;2783:18;2775:26;;2811:71;2879:1;2868:9;2864:17;2855:6;2811:71;:::i;:::-;2765:124;;;;:::o;2895:96::-;;2961:24;2979:5;2961:24;:::i;:::-;2950:35;;2940:51;;;:::o;2997:77::-;;3063:5;3052:16;;3042:32;;;:::o;3080:126::-;;3157:42;3150:5;3146:54;3135:65;;3125:81;;;:::o;3212:77::-;;3278:5;3267:16;;3257:32;;;:::o;3295:154::-;;3392:51;3437:5;3392:51;:::i;:::-;3379:64;;3369:80;;;:::o;3455:127::-;;3552:24;3570:5;3552:24;:::i;:::-;3539:37;;3529:53;;;:::o;3588:122::-;3661:24;3679:5;3661:24;:::i;:::-;3654:5;3651:35;3641:2;;3700:1;3697;3690:12;3641:2;3631:79;:::o;3716:122::-;3789:24;3807:5;3789:24;:::i;:::-;3782:5;3779:35;3769:2;;3828:1;3825;3818:12;3769:2;3759:79;:::o;3844:122::-;3917:24;3935:5;3917:24;:::i;:::-;3910:5;3907:35;3897:2;;3956:1;3953;3946:12;3897:2;3887:79;:::o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./ZunamiStablecoin.sol\";\n\ncontract Main {\n    address constant internal usdcAddr = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n    address constant internal usdtAddr = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\n\n    bytes32 constant internal usdcTicker = 'usdc';\n    bytes32 constant internal usdtTicker = 'usdt';\n    bytes32 constant internal zusdTicker = 'zusd';\n\n    struct Token {\n        bytes32 ticker;\n        IERC20 token;\n    }\n\n    mapping(bytes32 => Token) public stableCoins;\n    mapping(address => mapping(bytes32 => uint)) public traderBalances;\n\n    address public admin;\n\n    constructor() {\n        admin = msg.sender;\n        stableCoins[usdcTicker] = Token(usdcTicker, IERC20(usdcAddr));\n        stableCoins[usdtTicker] = Token(usdtTicker, IERC20(usdtAddr));\n        stableCoins[zusdTicker] = Token(zusdTicker, new ZunamiStablecoin(address(this)));\n    }\n\n    function deposit(bytes32 ticker, uint amount) external {}\n\n    function withdraw(bytes32 ticker, uint amount) external {}\n}\n\n",
  "sourcePath": "/home/alexey/src/ZunamiProtocol/contracts/Main.sol",
  "ast": {
    "absolutePath": "/home/alexey/src/ZunamiProtocol/contracts/Main.sol",
    "exportedSymbols": {
      "Context": [
        800
      ],
      "ERC20": [
        699
      ],
      "IERC20": [
        777
      ],
      "Main": [
        101
      ],
      "ZunamiStablecoin": [
        198
      ]
    },
    "id": 102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:31:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 778,
        "src": "64:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alexey/src/ZunamiProtocol/contracts/ZunamiStablecoin.sol",
        "file": "./ZunamiStablecoin.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 199,
        "src": "121:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          198
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101
        ],
        "name": "Main",
        "nameLocation": "164:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 6,
            "mutability": "constant",
            "name": "usdcAddr",
            "nameLocation": "201:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "175:79:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "212:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 9,
            "mutability": "constant",
            "name": "usdtAddr",
            "nameLocation": "286:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "260:79:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "260:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307864414331374639353844326565353233613232303632303639393435393743313344383331656337",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "297:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 12,
            "mutability": "constant",
            "name": "usdcTicker",
            "nameLocation": "372:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "346:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "346:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "75736463",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "385:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1773e1ddf200efb0fafc1e372028aa623f95d2de00ee1f4be9d606ee8c89d5fb",
                "typeString": "literal_string \"usdc\""
              },
              "value": "usdc"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 15,
            "mutability": "constant",
            "name": "usdtTicker",
            "nameLocation": "423:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "397:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "397:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "75736474",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "436:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
                "typeString": "literal_string \"usdt\""
              },
              "value": "usdt"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 18,
            "mutability": "constant",
            "name": "zusdTicker",
            "nameLocation": "474:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "448:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 16,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "448:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "7a757364",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "487:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1d5d502fc00861d82d57bafb549fc797c84213ff1deb4bba4e217772009783c7",
                "typeString": "literal_string \"zusd\""
              },
              "value": "zusd"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Main.Token",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "ticker",
                "nameLocation": "531:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "523:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 19,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "523:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "554:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "547:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$777",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 22,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 777,
                    "src": "547:6:0"
                  },
                  "referencedDeclaration": 777,
                  "src": "547:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$777",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "507:5:0",
            "nodeType": "StructDefinition",
            "scope": 101,
            "src": "500:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d56f5a5c",
            "id": 29,
            "mutability": "mutable",
            "name": "stableCoins",
            "nameLocation": "605:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "572:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
              "typeString": "mapping(bytes32 => struct Main.Token)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "580:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "572:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                "typeString": "mapping(bytes32 => struct Main.Token)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "591:5:0"
                },
                "referencedDeclaration": 24,
                "src": "591:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$24_storage_ptr",
                  "typeString": "struct Main.Token"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72ce957e",
            "id": 35,
            "mutability": "mutable",
            "name": "traderBalances",
            "nameLocation": "674:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "622:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(bytes32 => uint256))"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "630:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "622:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(bytes32 => uint256))"
              },
              "valueType": {
                "id": 33,
                "keyType": {
                  "id": 31,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "649:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "641:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                  "typeString": "mapping(bytes32 => uint256)"
                },
                "valueType": {
                  "id": 32,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "660:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 37,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "710:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "695:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "695:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "736:267:0",
              "statements": [
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "746:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 41,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "754:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "754:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "746:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "746:18:0"
                },
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45,
                        "name": "stableCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "774:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                          "typeString": "mapping(bytes32 => struct Main.Token storage ref)"
                        }
                      },
                      "id": 47,
                      "indexExpression": {
                        "id": 46,
                        "name": "usdcTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "786:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "774:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_storage",
                        "typeString": "struct Main.Token storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49,
                          "name": "usdcTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "806:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 51,
                              "name": "usdcAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "825:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "818:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$777_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "818:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 48,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "800:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Token_$24_storage_ptr_$",
                          "typeString": "type(struct Main.Token storage pointer)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "800:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_memory_ptr",
                        "typeString": "struct Main.Token memory"
                      }
                    },
                    "src": "774:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$24_storage",
                      "typeString": "struct Main.Token storage ref"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "774:61:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 56,
                        "name": "stableCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "845:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                          "typeString": "mapping(bytes32 => struct Main.Token storage ref)"
                        }
                      },
                      "id": 58,
                      "indexExpression": {
                        "id": 57,
                        "name": "usdtTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "857:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "845:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_storage",
                        "typeString": "struct Main.Token storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 60,
                          "name": "usdtTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "877:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 62,
                              "name": "usdtAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "896:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 61,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "889:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$777_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "889:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 59,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "871:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Token_$24_storage_ptr_$",
                          "typeString": "type(struct Main.Token storage pointer)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "871:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_memory_ptr",
                        "typeString": "struct Main.Token memory"
                      }
                    },
                    "src": "845:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$24_storage",
                      "typeString": "struct Main.Token storage ref"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "845:61:0"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 67,
                        "name": "stableCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "916:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                          "typeString": "mapping(bytes32 => struct Main.Token storage ref)"
                        }
                      },
                      "id": 69,
                      "indexExpression": {
                        "id": 68,
                        "name": "zusdTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "928:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_storage",
                        "typeString": "struct Main.Token storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "zusdTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "948:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 77,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "989:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Main_$101",
                                    "typeString": "contract Main"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Main_$101",
                                    "typeString": "contract Main"
                                  }
                                ],
                                "id": 76,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "981:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 75,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "981:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "981:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "960:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ZunamiStablecoin_$198_$",
                              "typeString": "function (address) returns (contract ZunamiStablecoin)"
                            },
                            "typeName": {
                              "id": 73,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 72,
                                "name": "ZunamiStablecoin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 198,
                                "src": "964:16:0"
                              },
                              "referencedDeclaration": 198,
                              "src": "964:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZunamiStablecoin_$198",
                                "typeString": "contract ZunamiStablecoin"
                              }
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "960:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZunamiStablecoin_$198",
                            "typeString": "contract ZunamiStablecoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_ZunamiStablecoin_$198",
                            "typeString": "contract ZunamiStablecoin"
                          }
                        ],
                        "id": 70,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "942:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Token_$24_storage_ptr_$",
                          "typeString": "type(struct Main.Token storage pointer)"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "942:54:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_memory_ptr",
                        "typeString": "struct Main.Token memory"
                      }
                    },
                    "src": "916:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$24_storage",
                      "typeString": "struct Main.Token storage ref"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "916:80:0"
                }
              ]
            },
            "id": 84,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:0"
            },
            "scope": 101,
            "src": "722:281:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1064:2:0",
              "statements": []
            },
            "functionSelector": "1de26e16",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1018:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1034:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1026:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1047:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1042:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:29:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:0"
            },
            "scope": 101,
            "src": "1009:57:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1128:2:0",
              "statements": []
            },
            "functionSelector": "040cf020",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1081:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1098:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1090:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1111:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1106:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:29:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:0:0"
            },
            "scope": 101,
            "src": "1072:58:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 102,
        "src": "155:977:0"
      }
    ],
    "src": "31:1103:0"
  },
  "legacyAST": {
    "absolutePath": "/home/alexey/src/ZunamiProtocol/contracts/Main.sol",
    "exportedSymbols": {
      "Context": [
        800
      ],
      "ERC20": [
        699
      ],
      "IERC20": [
        777
      ],
      "Main": [
        101
      ],
      "ZunamiStablecoin": [
        198
      ]
    },
    "id": 102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:31:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 778,
        "src": "64:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alexey/src/ZunamiProtocol/contracts/ZunamiStablecoin.sol",
        "file": "./ZunamiStablecoin.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 199,
        "src": "121:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          198
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101
        ],
        "name": "Main",
        "nameLocation": "164:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 6,
            "mutability": "constant",
            "name": "usdcAddr",
            "nameLocation": "201:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "175:79:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "212:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 9,
            "mutability": "constant",
            "name": "usdtAddr",
            "nameLocation": "286:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "260:79:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "260:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307864414331374639353844326565353233613232303632303639393435393743313344383331656337",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "297:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 12,
            "mutability": "constant",
            "name": "usdcTicker",
            "nameLocation": "372:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "346:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "346:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "75736463",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "385:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1773e1ddf200efb0fafc1e372028aa623f95d2de00ee1f4be9d606ee8c89d5fb",
                "typeString": "literal_string \"usdc\""
              },
              "value": "usdc"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 15,
            "mutability": "constant",
            "name": "usdtTicker",
            "nameLocation": "423:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "397:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "397:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "75736474",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "436:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
                "typeString": "literal_string \"usdt\""
              },
              "value": "usdt"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 18,
            "mutability": "constant",
            "name": "zusdTicker",
            "nameLocation": "474:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "448:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 16,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "448:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "7a757364",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "487:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1d5d502fc00861d82d57bafb549fc797c84213ff1deb4bba4e217772009783c7",
                "typeString": "literal_string \"zusd\""
              },
              "value": "zusd"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Main.Token",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "ticker",
                "nameLocation": "531:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "523:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 19,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "523:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "554:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "547:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$777",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 22,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 777,
                    "src": "547:6:0"
                  },
                  "referencedDeclaration": 777,
                  "src": "547:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$777",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "507:5:0",
            "nodeType": "StructDefinition",
            "scope": 101,
            "src": "500:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d56f5a5c",
            "id": 29,
            "mutability": "mutable",
            "name": "stableCoins",
            "nameLocation": "605:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "572:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
              "typeString": "mapping(bytes32 => struct Main.Token)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "580:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "572:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                "typeString": "mapping(bytes32 => struct Main.Token)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "591:5:0"
                },
                "referencedDeclaration": 24,
                "src": "591:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$24_storage_ptr",
                  "typeString": "struct Main.Token"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72ce957e",
            "id": 35,
            "mutability": "mutable",
            "name": "traderBalances",
            "nameLocation": "674:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "622:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(bytes32 => uint256))"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "630:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "622:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(bytes32 => uint256))"
              },
              "valueType": {
                "id": 33,
                "keyType": {
                  "id": 31,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "649:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "641:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                  "typeString": "mapping(bytes32 => uint256)"
                },
                "valueType": {
                  "id": 32,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "660:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 37,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "710:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "695:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "695:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "736:267:0",
              "statements": [
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "746:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 41,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "754:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "754:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "746:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "746:18:0"
                },
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45,
                        "name": "stableCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "774:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                          "typeString": "mapping(bytes32 => struct Main.Token storage ref)"
                        }
                      },
                      "id": 47,
                      "indexExpression": {
                        "id": 46,
                        "name": "usdcTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "786:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "774:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_storage",
                        "typeString": "struct Main.Token storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49,
                          "name": "usdcTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "806:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 51,
                              "name": "usdcAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "825:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "818:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$777_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "818:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 48,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "800:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Token_$24_storage_ptr_$",
                          "typeString": "type(struct Main.Token storage pointer)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "800:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_memory_ptr",
                        "typeString": "struct Main.Token memory"
                      }
                    },
                    "src": "774:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$24_storage",
                      "typeString": "struct Main.Token storage ref"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "774:61:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 56,
                        "name": "stableCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "845:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                          "typeString": "mapping(bytes32 => struct Main.Token storage ref)"
                        }
                      },
                      "id": 58,
                      "indexExpression": {
                        "id": 57,
                        "name": "usdtTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "857:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "845:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_storage",
                        "typeString": "struct Main.Token storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 60,
                          "name": "usdtTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "877:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 62,
                              "name": "usdtAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "896:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 61,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "889:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$777_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "889:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$777",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 59,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "871:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Token_$24_storage_ptr_$",
                          "typeString": "type(struct Main.Token storage pointer)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "871:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_memory_ptr",
                        "typeString": "struct Main.Token memory"
                      }
                    },
                    "src": "845:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$24_storage",
                      "typeString": "struct Main.Token storage ref"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "845:61:0"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 67,
                        "name": "stableCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "916:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Token_$24_storage_$",
                          "typeString": "mapping(bytes32 => struct Main.Token storage ref)"
                        }
                      },
                      "id": 69,
                      "indexExpression": {
                        "id": 68,
                        "name": "zusdTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "928:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_storage",
                        "typeString": "struct Main.Token storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "zusdTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "948:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 77,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "989:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Main_$101",
                                    "typeString": "contract Main"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Main_$101",
                                    "typeString": "contract Main"
                                  }
                                ],
                                "id": 76,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "981:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 75,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "981:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "981:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "960:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ZunamiStablecoin_$198_$",
                              "typeString": "function (address) returns (contract ZunamiStablecoin)"
                            },
                            "typeName": {
                              "id": 73,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 72,
                                "name": "ZunamiStablecoin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 198,
                                "src": "964:16:0"
                              },
                              "referencedDeclaration": 198,
                              "src": "964:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZunamiStablecoin_$198",
                                "typeString": "contract ZunamiStablecoin"
                              }
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "960:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZunamiStablecoin_$198",
                            "typeString": "contract ZunamiStablecoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_contract$_ZunamiStablecoin_$198",
                            "typeString": "contract ZunamiStablecoin"
                          }
                        ],
                        "id": 70,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "942:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Token_$24_storage_ptr_$",
                          "typeString": "type(struct Main.Token storage pointer)"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "942:54:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$24_memory_ptr",
                        "typeString": "struct Main.Token memory"
                      }
                    },
                    "src": "916:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$24_storage",
                      "typeString": "struct Main.Token storage ref"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "916:80:0"
                }
              ]
            },
            "id": 84,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:0"
            },
            "scope": 101,
            "src": "722:281:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1064:2:0",
              "statements": []
            },
            "functionSelector": "1de26e16",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1018:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1034:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1026:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1047:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1042:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:29:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:0"
            },
            "scope": 101,
            "src": "1009:57:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1128:2:0",
              "statements": []
            },
            "functionSelector": "040cf020",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1081:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1098:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1090:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1111:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1106:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:29:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:0:0"
            },
            "scope": 101,
            "src": "1072:58:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 102,
        "src": "155:977:0"
      }
    ],
    "src": "31:1103:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-06T17:51:50.620Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}